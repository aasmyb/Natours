{"mappings":"wEAAO,MAAMA,EAAY,KACvB,MAAMC,EAAKC,SAASC,cAAc,UAC9BF,GAAIA,EAAGG,cAAcC,YAAYJ,EAAG,EAI7BK,EAAY,CAACC,EAAMC,KAC9BR,IACA,MAAMS,EAAS,4BAA4BF,MAASC,UACpDN,SAASC,cAAc,QAAQO,mBAAmB,aAAcD,GAChEE,OAAOC,WAAWZ,EAAW,IAAK,ECPvBa,EAAQC,MAAOC,EAAOC,KACjC,IAM0B,mBALNC,EAAAC,EAAA,CAAM,CACtBC,OAAQ,OACRC,IAAK,sBACLC,KAAM,C,MAAEN,E,SAAOC,MAETK,KAAKC,SACXhB,EAAU,UAAW,2BACrBM,YAAW,KACTW,SAASC,OAAO,IAAI,GACnB,M,CAEL,MAAOC,GACPnB,EAAU,QAASmB,EAAIC,SAASL,KAAKM,Q,GCb5BC,EAAqBd,MAAOO,EAAMd,KAC7C,IACE,MAAMa,EACK,aAATb,EACI,+BACA,yBAMkB,mBALNU,EAAAC,EAAA,CAAM,CACtBC,OAAQ,Q,IACRC,E,KACAC,KAEMA,KAAKC,QACXhB,EAAU,UAAW,QAAQC,4B,CAE/B,MAAOkB,GACPnB,EAAU,QAASmB,EAAIC,SAASL,KAAKM,Q,GChB5BE,EAAWf,MAAMgB,IAC5B,IACE,MAAMC,EAASC,OACb,+GAGIC,QAAgBhB,EAAAC,EAAA,CAAM,qCAAqCY,WAG3DC,EAAOG,mBAAmB,CAC9BC,UAAWF,EAAQZ,KAAKY,QAAQG,I,CAElC,MAAOX,GACPnB,EAAU,QAASmB,E,GCXjBY,EAAsB,CAACC,EAAYC,EAAQC,KAC/CtC,SAASC,cAAcmC,GAAYG,iBAAiBF,EAAQC,EAAQ,EAGhEE,EAAaJ,GACVpC,SAASC,cAAcmC,GAGhC,GAAII,EAAW,gBAAiB,CAQ9BL,EAAoB,eAAgB,UAPfvB,MAAM6B,IACzBA,EAAEC,iBACF,MAAM7B,EAAQ2B,EAAW,UAAUG,MAC7B7B,EAAW0B,EAAW,aAAaG,YACnChC,EAAME,EAAOC,EAAS,G,CAUhC,GAJI0B,EAAW,qBACbL,EAAoB,mBAAoB,SHJpBvB,UAMI,mBALNG,EAAAC,EAAA,CAAM,CACtBC,OAAQ,MACRC,IAAK,0BAGCC,KAAKC,QAAsBC,SAASC,OAAO,IAAI,IGCrDkB,EAAW,mBAAoB,CACjC,MAMMI,EAAoBhC,MAAM6B,IAC9BA,EAAEC,iBACF,MAAMvB,EAAO0B,OAAOC,YAAY,IAAI,IAAIC,SAASN,EAAEO,iBACnDP,EAAEO,cAAcC,cACVvB,EAAmBP,EAAM,WAAW,EAE5CgB,EAAoB,kBAAmB,UAZbvB,MAAM6B,IAC9BA,EAAEC,iBACF,MAAMvB,EAAO,IAAI4B,SAASN,EAAEO,qBACtBtB,EAAmBP,EAAM,OAAO,IAUxCgB,EAAoB,sBAAuB,SAAUS,E,CAGvD,GAAIJ,EAAW,cAAe,CAG5BL,EAAoB,aAAc,SAFVvB,MAAM6B,SACtBd,EAASc,EAAEO,cAAcE,QAAQtB,S,CAI3C,MAAMuB,EAAWX,EAAW,QAAQU,QAAQE,MACxCD,GAAU/C,EAAU,UAAW+C","sources":["public/js/alert.js","public/js/login.js","public/js/updateSettings.js","public/js/stripe.js","public/js/index.js"],"sourcesContent":["export const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\n\n// type is 'success' or 'error'\nexport const showAlert = (type, msg) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, 5000);\n};\n","import axios from 'axios';\nimport { showAlert } from './alert';\n\nexport const login = async (email, password) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: '/api/v1/users/login',\n      data: { email, password },\n    });\n    if (res.data.status === 'success') {\n      showAlert('success', 'Logged in successfully!');\n      setTimeout(() => {\n        location.assign('/');\n      }, 1500);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n\nexport const logout = async () => {\n  const res = await axios({\n    method: 'GET',\n    url: '/api/v1/users/logout',\n  });\n\n  if (res.data.status === 'success') location.assign('/');\n  try {\n  } catch (err) {\n    showAlert('error', 'Error logging out! Try again.');\n  }\n};\n","import axios from 'axios';\nimport { showAlert } from './alert';\n\n// type is either \"password\" or \"data\"\nexport const updateUserSettings = async (data, type) => {\n  try {\n    const url =\n      type === 'password'\n        ? '/api/v1/users/updatePassword'\n        : '/api/v1/users/updateMe';\n    const res = await axios({\n      method: 'PATCH',\n      url,\n      data,\n    });\n    if (res.data.status === 'success') {\n      showAlert('success', `Your ${type} is Updated Successfully`);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n","import axios from 'axios';\nimport { showAlert } from './alert';\n\nexport const bookTour = async tourId => {\n  try {\n    const stripe = Stripe(\n      'pk_test_51LrHPxIhnYPvSEUkRzkvVVwgahU9uKRfe50hdFCLBtyge9zevpHLQb0swHDnejHyOTdKQ5wVTM0aRehIZdx9Vrnr00RIaguQdc'\n    );\n    // 1) Get checkout session from API\n    const session = await axios(`/api/v1/bookings/checkout-session/${tourId}`);\n\n    // 2) Create checkout form + charge credit card\n    await stripe.redirectToCheckout({\n      sessionId: session.data.session.id,\n    });\n  } catch (err) {\n    showAlert('error', err);\n  }\n};\n","import { login, logout } from './login';\nimport { updateUserSettings } from './updateSettings';\nimport { bookTour } from './stripe';\nimport { showAlert } from './alert';\n\nconst attachEventListener = (elSelector, action, handler) => {\n  document.querySelector(elSelector).addEventListener(action, handler);\n};\n\nconst getElement = elSelector => {\n  return document.querySelector(elSelector);\n};\n\nif (getElement('.form--login')) {\n  const loginHandler = async e => {\n    e.preventDefault();\n    const email = getElement('#email').value;\n    const password = getElement('#password').value;\n    await login(email, password);\n  };\n\n  attachEventListener('.form--login', 'submit', loginHandler);\n}\n\nif (getElement('.nav__el--logout')) {\n  attachEventListener('.nav__el--logout', 'click', logout);\n}\n\nif (getElement('.form-user-data')) {\n  const updateDataHandler = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    await updateUserSettings(data, 'data');\n  };\n\n  const updatePassHandler = async e => {\n    e.preventDefault();\n    const data = Object.fromEntries([...new FormData(e.currentTarget)]);\n    e.currentTarget.reset();\n    await updateUserSettings(data, 'password');\n  };\n  attachEventListener('.form-user-data', 'submit', updateDataHandler);\n  attachEventListener('.form-user-settings', 'submit', updatePassHandler);\n}\n\nif (getElement('#book-tour')) {\n  const bookTourHandler = async e =>\n    await bookTour(e.currentTarget.dataset.tourId);\n  attachEventListener('#book-tour', 'click', bookTourHandler);\n}\n\nconst alertMsg = getElement('body').dataset.alert;\nif (alertMsg) showAlert('success', alertMsg);\n"],"names":["$81ad7b59b92296d9$export$516836c6a9dfc573","el","document","querySelector","parentElement","removeChild","$81ad7b59b92296d9$export$de026b00723010c1","type","msg","markup","insertAdjacentHTML","window","setTimeout","$01c7d0f0a0e1d063$export$596d806903d1f59e","async","email","password","$parcel$interopDefault","$iWLPj$axios","method","url","data","status","location","assign","err","response","message","$50cb39639deff920$export$a5f91aa6636f5910","$7305ef52c812bdd5$export$8d5bdbf26681c0c2","tourId","stripe","Stripe","session","redirectToCheckout","sessionId","id","$c0fb25a5d930bf56$var$attachEventListener","elSelector","action","handler","addEventListener","$c0fb25a5d930bf56$var$getElement","e","preventDefault","value","updatePassHandler","Object","fromEntries","FormData","currentTarget","reset","dataset","$c0fb25a5d930bf56$var$alertMsg","alert"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}